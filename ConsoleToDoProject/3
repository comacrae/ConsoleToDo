using System;
using ConsoleToDoProject.Models;
using ConsoleToDoProject.Interfaces;
using ConsoleToDoProject.Services;
namespace ConsoleToDoProject
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Commands commands = new Commands(initCommandsList:new CommandDefinitions().GetCommandList());
            Parser p  = new Parser(initCommands:commands);
            Dictionary<string, ICommandExecutor> executors = new Dictionary<string, ICommandExecutor>() ;
            executors.Add("save", new SaveCommandExecutor());
            executors.Add("load", new LoadCommandExecutor());
            executors.Add("add", new AddCommandExecutor());
            executors.Add("remove", new RemoveCommandExecutor());
            executors.Add("update", new UpdateCommandExecutor());
            SaveCommandExecutor save = new SaveCommandExecutor();
            AddCommandExecutor add = new AddCommandExecutor();
            RemoveCommandExecutor remove = new RemoveCommandExecutor();
            UpdateCommandExecutor update = new UpdateCommandExecutor();
            LoadCommandExecutor load = new LoadCommandExecutor();
            TaskListFileHandler fileHandler = new TaskListFileHandler();
            Command output = p.Parse(args);
            try
            {
                if(output.Name == "save")
                {
                    
                }
            }

        }
    }
}